{"version":3,"file":"vue.js","sources":["../src/observe/arr.js","../src/observe/index.js","../src/initState.js","../src/compile/parseAst.js","../src/compile/generate.js","../src/compile/index.js","../src/lifecycle.js","../src/init.js","../src/vnode/index.js","../src/index.js"],"sourcesContent":["//重写数组\n//（1）获取原来的数组方法\n\nlet oldArrayProtoMethods = Array.prototype\n\n// (2) 重写\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\n\n// 劫持\nlet methods = [\n    \"push\",\n    \"pop\",\n    \"unshift\",\n    \"shift\",\n    \"splice\"\n]\n\nmethods.forEach(item => {\n    ArrayMethods[item] = function(...args){ //this就是那个数组\n        // console.log(\"劫持数组\")\n\n        let result = oldArrayProtoMethods[item].apply(this, args)\n        // console.log(args,'args')\n        // 问题：数组追加对象的情况 arr.push({a:1})\n        let inserted;\n        switch(item){\n            case 'push':\n            case \"unshift\":\n                inserted = args;\n                break;\n            case \"splice\":\n                inserted = args.splice(2);  //arr.splice(0,1,{a:6}) 获取第三个参数{a:6}\n                break;\n        }\n        // console.log(inserted, \"inserted\")\n\n        let ob = this.__ob__\n        if(inserted){\n            ob.observeArray(inserted) //对我们的添加的对象进行劫持\n        }\n        return result\n    }\n})\n","import { ArrayMethods } from \"./arr\"\nexport function observer(data){\n    // 1.对象 vue2\n    \n    if(typeof data !== 'object' || data == null){\n        return data\n    }\n    //对象通过一个类\n    return new Observer(data)\n}\n\nclass Observer{\n    constructor(value){\n        // 给data定义一个属性\n        Object.defineProperty(value, \"__ob__\",{\n            enumerable: false,\n            value: this\n        })\n        //判断数据\n        // console.log(value)\n        if(Array.isArray(value)){\n            value.__proto__ =  ArrayMethods\n            console.log(\"数组\")\n            this.observeArray(value) //处理数组对象\n        }else{\n            this.walk(value)  //遍历\n        }\n    }\n    // vue2 Object.defineProperty 缺点：只劫持对象中的一个属性\n\n    walk(data){\n        let keys = Object.keys(data) //把对象中所有属性变成一个数组\n        for(let i=0; i<keys.length; i++){ //遍历每个属性\n            // 对我们的每个属性进行劫持\n            let key = keys[i]\n            let value = data[key]\n            defineReactive(data, key, value)\n        }\n    }\n    observeArray(value){\n        //对对象数组每一项进行劫持\n        for(let i= 0; i< value.length; i++){\n            observer(value[i])\n        }\n    }\n}\n//对对象中的属性进行劫持\nfunction defineReactive(data, key, value){\n    observer(value)  //深度代理\n    Object.defineProperty(data, key, {\n        get(){\n            // console.log('获取')\n            return value\n        },\n        set(newValue){\n            // console.log('设置')\n            if(newValue == value) return value\n            observer(newValue) //如果对象设置的值是对象\n            value = newValue\n        }\n    })\n}  \n\n//总结：（1）对象\n// 1. Object.defineProperty 只能对对象中的一个属性进行劫持\n// 2. 遍历 \n// 3. 递归 get set\n\n\n// 数组 { list:[1,2,3,4], arr:[{a:1}]}\n// 采用函数劫持方法，劫持数组方法   arr.push()","import { observer } from \"./observe/index\"\n\nexport function initState(vm){\n    let opts = vm.$options\n    console.log(opts)\n    if(opts.props){\n        initProps(vm)\n    }\n    if(opts.data){\n        initData(vm)\n    }\n    if(opts.watch){\n        initWatch(vm)\n    }\n    if(opts.computed){\n        initComputed(vm)\n    }\n    if(opts.methods){\n        initMethods(vm)\n    }\n}\n\nfunction initComputed(){\n\n}\n//vue2 对data初始化, (1)对象 （2） 函数\nfunction initData(vm){\n    // console.log('data初始化')\n    let data = vm.$options.data\n    data = vm._data = typeof data === \"function\" ? data.call(vm): data; //注意this,原来指向window,现在指向vm实例\n    \n    //将data上的所有属性代理到实例上 {a:1,b:2}\n    for(let key in data){\n        proxy(vm, \"_data\", key)\n    }\n    // 对数据进行劫持\n    observer(data)\n}\nfunction proxy(vm, source, key){\n    Object.defineProperty(vm, key, {\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue\n        }\n    })\n}\n//data{}  (1)对象  （2）数组   {a:{b:1},list:[1,2,3],arr:[{}]}\n\nfunction initMethods(){\n\n}\nfunction initWatch(){}\nfunction initProps(){}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;  //标签名称\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;   //作用域 <span:xx>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是 标签名<\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的  </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+| ([^\\s\"'=<>`]+)))?/; // 匹配属性的 \n// <div id=“app\"></div>\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n//遍历字符串，遍历一个，删除一个\n//<div id=\"app\"> hello {{msg}} <h></h></div> 开始标签 文本 结束标签\n\n/**\n * {\n * tag:'div',\n * attrs:[{id:\"app\"}],\n * children:[{tag:null,text:hello},{tag:'div'}]\n * }\n * \n * \n */\n// 创建ast语法树\nfunction createAstElement(tag, attrs){\n    return {\n        tag, //元素 div\n        attrs, \n        children:[], //子节点\n        type: 1,\n        parent: null\n    }\n}\n\nlet root; //根元素\nlet createParent //当前元素的父亲\n// 数据结构： 栈\nlet stack = []  // [div,h]\nfunction start(tag, attrs) { //开始标签\n    let element = createAstElement(tag, attrs)\n    // console.log(tag, attrs,\"开始标签\")\n    if(!root){\n        root = element\n    }\n    createParent = element\n    stack.push(element) //入栈\n}\n\nfunction charts(text) { //获取文本\n    // console.log(text, \"文本\")\n    // 空格 a全部去掉\n    text = text.replace(/\\s/g,'')\n    if(text){\n        createParent.children.push({\n            type:3,\n            text\n        })\n    }\n}\n\nfunction end(tag) { //结束的标签\n    // console.log(tag,\"结束标签\")\n    let element = stack.pop()\n    createParent = stack[stack.length - 1]\n    if(createParent){ //元素闭合\n        element.parent = createParent.tag\n        createParent.children.push(element)\n    }\n}\nexport function parseHTML(html) {\n    while (html) { //html为空时结束\n        //判断标签\n        let textEnd = html.indexOf(\"<\")\n        if (textEnd === 0) { //标签\n            // （1）开始标签\n            const startTagMatch = parseStartTag() //开始标签的内容\n            if(startTagMatch){\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue;\n            }\n            // 结束标签\n            let endTagMatch = html.match(endTag)\n            if(endTagMatch){\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue;\n            }\n        }\n        let text\n        //文本\n        if (textEnd > 0) {\n            // 获取文本内容\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            advance(text.length)\n            charts(text)\n        }\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen) //1结果 2 false\n        if(!start) return\n        //创建ast语法树\n        let match = {\n            tagName: start[1],\n            attrs: []\n        }\n        // 删除开始标签\n        advance(start[0].length)\n\n        // 注意  多个遍历\n        // 注意  >\n        let attr\n        let end\n        while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n            // console.log(attr)\n            match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n            advance(attr[0].length)\n        }\n        if (end) {\n            advance(end[0].length)\n            return match\n        }\n    }\n    \n    function advance(n) {\n        html = html.substring(n)\n\n    }\n    return root\n}","/**\n * \n * <div id=\"app\">hello {{msg}} <h></h></div>\n * \n * render(){ _c 解析标签\n *  return _c('div', {id:app}, _v('hell'+_s(msg)),_c)\n * }\n * \n */\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n// 处理属性\nfunction getProps(attrs) {\n    let str = ''\n    // 对象形式\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n        if (attr.name === 'style') {\n            let obj = {}\n            attr.value.split(';').forEach(item => {\n                let [key, val] = item.split(\":\")\n                obj[key] = val\n            })\n            attr.value = obj\n        }\n        // 拼接 \n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\n//处理子集\nfunction genChildren(el) {\n    let children = el.children\n    if (children) {\n        return children.map(child => gen(child)).join(',')\n    }else{\n        return false\n    }\n}\n\nfunction gen(node) { //1 元素div  2  3文本\n    if (node.type === 1) {\n        return generate(node)\n    } else {  //（1）只是文本 hello  (2) 插值表达式{{}}\n        let text = node.text  //获取文本\n        if (!defaultTagRE.test(text)) {//没有插值表达式的\n            return `_v(${JSON.stringify(text)})`\n        }\n        //带有插值表达式的\n        let tokens = []\n        // 每一次将test的lastIndex置为0，否则除了第一次以外会匹配不到, 无法使用exec\n        let lastIndex = defaultTagRE.lastIndex = 0\n        let match, index\n        while (match = defaultTagRE.exec(text)) {\n            console.log(match, lastIndex)\n            //hello {{msg}}\n            index = match.index\n            if (index > lastIndex) { //添加内容\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`)\n            lastIndex = index + match[0].length\n\n        }\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join(\"+\")})`\n\n    }\n}\nexport function generate(el) {\n    // console.log(el)\n    //注意属性 {id:app, style:{color:red,font-size:20px}}\n    let children = genChildren(el)\n    let code = `_c('${el.tag}',${el.attrs.length ? getProps(el.attrs) : 'undefined'},${children ? children : ''})`\n    console.log(code,\"code\")\n    return code\n}","import { parseHTML } from \"./parseAst\"\nimport { generate } from \"./generate\"\n\nexport function compileToFunction(el) {\n    //解析成AST语法树\n    // 1. 将html变为ast语法树\n    let ast = parseHTML(el)\n    // console.log(ast)\n    // 2. ast语法树变成render函数 （1） ast语法树变成字符串 （2）字符串变成函数\n    let code = generate(ast)  //_c解析元素， _v解析文本，_s解析变量\n    // 3. 将render字符串变成函数\n    let render = new Function(`with(this){return ${code}}`)\n    \n    return render\n}\n\n","\nexport function mountComponent(vm, el){\n    vm._update(vm._render()) //功能：(1) vm._render将render函数变为vnode  (2)vm._update将vnode变为真实dom放到页面\n}\n\nexport function lifeCycleMixin(Vue){\n    Vue.prototype._update = function(vnode){  \n        \n    }\n}\n\n// render()函数 =》vnode => 真实的DOM","import { initState } from \"./initState\"\nimport { compileToFunction } from \"./compile/index\"\nimport { mountComponent } from \"./lifecycle\"\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        let vm = this\n        vm.$options = options\n        // 1. 初始化状态\n        initState(vm)\n\n        //2. 渲染模板 el 找到指定位置\n        if(vm.$options.el){\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    // 创建 $mount\n\n    Vue.prototype.$mount = function(el){\n        let vm = this\n        el = document.querySelector(el) //获取元素\n        let options = vm.$options\n        if(!options.render){//没有\n            let template = options.template\n            if(!template && el){\n                //获取html\n                el = el.outerHTML\n                \n                //变成ast语法树\n                let render = compileToFunction(el)\n                //(1) 将render 函数变成vode  (2) vnode变成真实DOM放到页面上去\n                options.render = render\n\n            }\n        } \n        mountComponent(vm, el)\n    }\n}\n//渲染步骤，先初始化initState，然后渲染模板，有三种方式： el、render、template\n// 必须有el, 拿到HTML标签的目的是变成render函数\n//变成render之前，先变成ast语法树（所有都能操作js,css,html） 虚拟dom vnode(只能操作节点)\n//<div id=\"app\"> hello {{msg}} <h></h></div>\n\n/**\n * {\n * tag:'div',\n * attrs:[{id:\"app\"}],\n * children:[{tag:null,text:hello},{tag:'div'}]\n * }\n * \n * \n */\n\n","\nexport function renderMixin(Vue) {\n    Vue.prototype._c = function () { //标签\n        // 创建标签\n        return createElement(...arguments)\n    }\n    Vue.prototype._v = function (text) { //文本\n        return createText(text)\n    }\n    Vue.prototype._s = function (val) { //变量\n        return val == null ? \"\" : (typeof val === 'object') ? JSON.stringify(val) : val\n    }\n    Vue.prototype._render = function () { //render函数变成vnode\n        let vm = this\n        let render = vm.$options.render\n        let vnode = render.call(this)\n        console.log(vnode)\n    }\n}\n//创建元素\nfunction createElement(tag, data={}, ...children) {\n    // const key = data.key\n    // if (key) {\n    //   delete data.key\n    // }\n    return vnode(tag, data, data.key, children)\n}\n//创建文本\nfunction createText(text){\n    return vnode(undefined, undefined, undefined, undefined, text)\n}\n// 创建vnode\nfunction vnode(tag, data, key, children, text) {\n    return { tag, data, key, children, text }\n}","import { initMixin } from \"./init\"\nimport { lifeCycleMixin } from \"./lifecycle\"\nimport { renderMixin } from \"./vnode/index\"\nfunction Vue(options){\n    // 初始化\n    this._init(options)\n}\n\ninitMixin(Vue)\nlifeCycleMixin(Vue) //添加生命周期\nrenderMixin(Vue)    //添加_render\nexport default Vue"],"names":["oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","methods","forEach","item","args","result","apply","inserted","splice","ob","__ob__","observeArray","observer","data","Observer","value","defineProperty","enumerable","isArray","__proto__","console","log","walk","keys","i","length","key","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","watch","computed","_data","call","proxy","source","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","tag","attrs","children","type","parent","root","createParent","stack","start","element","push","charts","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","match","advance","substring","attr","name","n","defaultTagRE","getProps","str","obj","split","val","JSON","stringify","slice","genChildren","el","map","child","gen","join","node","generate","test","tokens","lastIndex","index","exec","trim","code","compileToFunction","ast","render","Function","mountComponent","_update","_render","lifeCycleMixin","Vue","vnode","initMixin","_init","options","$mount","document","querySelector","template","outerHTML","renderMixin","_c","createElement","arguments","_v","createText","_s","undefined"],"mappings":"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"}